'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.3615
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization
Imports Framework.Configuracion

'
'This source code was auto-generated by wsdl, Version=2.0.50727.42.
'
Namespace Proxy
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SendMailSoap", [Namespace]:="http://dipres.cl/webservices")>  _
    Partial Public Class SendMail
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CallSendMailOperationCompleted As System.Threading.SendOrPostCallback
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Configuracion.getInstance().UrlwsSendMail
        End Sub
        
        '''<remarks/>
        Public Event CallSendMailCompleted As CallSendMailCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dipres.cl/webservices/SendMail", RequestElementName:="SendMail", RequestNamespace:="http://dipres.cl/webservices", ResponseElementName:="SendMailResponse", ResponseNamespace:="http://dipres.cl/webservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CallSendMail(ByVal strFrom As String, ByVal strTo As String, ByVal strCC As String, ByVal strSubject As String, ByVal strMessage As String, ByVal iImportancia As Integer) As <System.Xml.Serialization.XmlElementAttribute("SendMailResult")> Boolean
            Dim results() As Object = Me.Invoke("CallSendMail", New Object() {strFrom, strTo, strCC, strSubject, strMessage, iImportancia})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCallSendMail(ByVal strFrom As String, ByVal strTo As String, ByVal strCC As String, ByVal strSubject As String, ByVal strMessage As String, ByVal iImportancia As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CallSendMail", New Object() {strFrom, strTo, strCC, strSubject, strMessage, iImportancia}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCallSendMail(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CallSendMailAsync(ByVal strFrom As String, ByVal strTo As String, ByVal strCC As String, ByVal strSubject As String, ByVal strMessage As String, ByVal iImportancia As Integer)
            Me.CallSendMailAsync(strFrom, strTo, strCC, strSubject, strMessage, iImportancia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CallSendMailAsync(ByVal strFrom As String, ByVal strTo As String, ByVal strCC As String, ByVal strSubject As String, ByVal strMessage As String, ByVal iImportancia As Integer, ByVal userState As Object)
            If (Me.CallSendMailOperationCompleted Is Nothing) Then
                Me.CallSendMailOperationCompleted = AddressOf Me.OnCallSendMailOperationCompleted
            End If
            Me.InvokeAsync("CallSendMail", New Object() {strFrom, strTo, strCC, strSubject, strMessage, iImportancia}, Me.CallSendMailOperationCompleted, userState)
        End Sub
        
        Private Sub OnCallSendMailOperationCompleted(ByVal arg As Object)
            If (Not (Me.CallSendMailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CallSendMailCompleted(Me, New CallSendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub CallSendMailCompletedEventHandler(ByVal sender As Object, ByVal e As CallSendMailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CallSendMailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
